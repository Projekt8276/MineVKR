buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
    }
}

plugins {
    id 'maven-publish'
    id 'fabric-loom' version '0.2.7-SNAPSHOT'//'0.2.3-SNAPSHOT'
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


minecraft {
}

repositories {
    //optifabric
    maven { url = "http://maven.fabricmc.net/" }
    mavenCentral()
}

dependencies {
    //Deps required for optifabric
    compile 'org.zeroturnaround:zt-zip:1.13'
    compile('net.fabricmc:stitch:0.2.1.61') {
        transitive = false
    }

    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //used for building mod
    compileOnly files('ofpre10.jar')

    // 
    modCompileOnly "me.shedaniel.cloth:config-2:3.3.2-unstable"
    modCompileOnly "io.github.prospector:modmenu:1.11.1+build.3"

    //For javax.annotation.Nullable
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    //Connect With C++ and Pukan API (3.2.2)
    //implementation "org.lwjgl:lwjgl-vulkan:3.2.2"
    //implementation "org.lwjgl:lwjgl-vma:3.2.2"

    // JavaCPP for connect our framework... (JiviX)
    compile "org.bytedeco:javacpp:1.5.3"
    compile fileTree(include: ['*.jar'], dir: 'lib')

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
    
    // Try latest version...
	implementation platform("org.lwjgl:lwjgl-bom:3.2.3")
	implementation "org.lwjgl:lwjgl:3.2.3"
    implementation "org.lwjgl:lwjgl-stb:3.2.3"
	implementation "org.lwjgl:lwjgl-vma:3.2.3"
	implementation "org.lwjgl:lwjgl-vulkan:3.2.3"
    implementation "org.lwjgl:lwjgl-opengl:3.2.3"
    implementation "org.lwjgl:lwjgl-openal:3.2.3"
    implementation "org.lwjgl:lwjgl-glfw:3.2.3"
	runtimeOnly "org.lwjgl:lwjgl:3.2.3:natives-windows"
	runtimeOnly "org.lwjgl:lwjgl-vma:3.2.3:natives-windows"

    // ONLY when override OpenGL!
    //implementation "org.lwjgl:lwjgl-opengl"
    //runtimeOnly "org.lwjgl:lwjgl-opengl::natives-windows"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

repositories {
    flatDir {
        dirs 'deps'
    }

    //for requiem
    jcenter()
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
    maven {
        url = 'https://maven.fabricmc.net'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
